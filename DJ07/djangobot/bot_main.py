import telebot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton
import requests
import logging

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_URL = "http://127.0.0.1:8000/api"
BOT_TOKEN = "7961846850:AAFhaBZNWcTe_lYPsKIrUUbha_pKcVYMbVg"

bot = telebot.TeleBot(BOT_TOKEN)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–µ–Ω—é Telegram (—Ç—Ä–∏ –ø–æ–ª–æ—Å–∫–∏)
bot.set_my_commands([
    telebot.types.BotCommand("start", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"),
    telebot.types.BotCommand("myinfo", "–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ"),
    telebot.types.BotCommand("help", "–ü–æ–º–æ—â—å"),
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message: Message):
    data = {
        "user_id": message.from_user.id,
        "username": message.from_user.username
    }

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row(KeyboardButton("/myinfo"), KeyboardButton("/help"))

    try:
        response = requests.post(f"{API_URL}/register/", json=data)
        if response.status_code == 201:
            bot.send_message(message.chat.id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", reply_markup=keyboard)
        elif response.status_code == 200:
            bot.send_message(message.chat.id, "‚ÑπÔ∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏! –ö–æ–¥: {response.status_code}", reply_markup=keyboard)
            print(response.text)  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /myinfo
@bot.message_handler(commands=['myinfo'])
def user_info(message: Message):
    try:
        response = requests.get(f"{API_URL}/user/{message.from_user.id}/")
        if response.status_code == 200:
            user_data = response.json()
            bot.reply_to(message, f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\nID: {user_data['user_id']}\nUsername: {user_data['username']}")
        elif response.status_code == 404:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help_command(message: Message):
    help_text = (
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"
        "/myinfo ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n"
        "/help ‚Äî –ø–æ–º–æ—â—å"
    )
    bot.send_message(message.chat.id, help_text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
